//* Links ====================================================================================================//

<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
//https://jquery.com/
//https://jquery-docs.ru/
//https://jquery.page2page.ru/index.php5/Заглавная_страница
//(https://www.youtube.com/watch?v=9Pqf_AIT2ZI)

//todo LH ====================================================================================================//

//$(document).ready(function () {
// весь код будет выполнен только после полной загрузки сайта
//})


//! Selectors ====================================================================================================//

//? Селекторы по атрибутам
//$('img[src^=img/]') // Искать атрибуты которые начинается с img/
//$('imf[src$=.png]') // Искать атрибуты которые заканчивается .png
//$('a[href*=name]') // Искать атрибуты которые имеют слово name
//$('img[alt]') // Только с атрибутом
//"[name = value]" элементы, у которых значение атрибута name совпадает с value
//"[name != value]" элементы, у которых значение атрибута name не совпадает с value
//"[name ^= value]" элементы, у которых значение атрибута name начинается с value
//"[name $= value]" элементы, у которых значение атрибута name заканчивается на value
//"[name *= value]" элементы, у которых значение атрибута name содержит подстроку value
//"[name ~= value]" элементы, у которых значение атрибута name содержит слово value
//"[name |= value]" элементы, у которых значение атрибута name имеют префикс value (равен value или имеет вид: "value-*")
//"[first][second][..." элементы, соответствующие всем заданным условиям на атрибуты одновременно

//? Простые фильтры =================//
//$('li:even') // выбрать только четные (в js нумерация начинается с 0!!!)
//$('li:odd') // выбрать только нечетные (в js нумерация начинается с 0!!!)
//$('img:not(.logo img)') // выбрать все img кроме img в .logo
//$('li:has(a)') // выбрать все li в нетри которых есть а
//$('p:contains(word)') // Выбрать все р внутри которых есть слово word
//$('li:first') // выбрать первый
//$('li:last') // выбрать последний
//$('div:hidden') // все скрытые
//$('div:visibility') // все видимые
//":eq( )" элемент идущий под заданным номером среди выбранных
//":not(selector)" все найденные элементы, кроме указанных в selector
//":gt( )" элементы с индексом превышающим n
//":lt( )" элементы с индексом меньшим, чем n
//":header" элементы, являющиеся заголовками (с тегами h1, h2 и.т.д.)
//":animated" элементы, которые в данный момент задействованы в анимации
//":lang(language)" элементы, в которых указаны языки содержимого
//":root" элемент, который является корневым в документе.
//$('h1').css('color', 'red') // Обратиться по тегу
//$('h1 + p').css('color', 'green') // Обратиться ко всем p после h1
//"prev ~ next"элементы из next, которые следуют за элементами из prev
//$('#content').prev().css('color', 'orange') // Обратиться к предыдущему
//$('#content').next().css('color', 'orange') // Обратиться к следующему
//$('*').css('background', '#555') // Обратиться ко всем тегам
//$('.content p').css('color', 'blue') // Обратиться ко всем p внутри .content
//$('.content').find('a.button').css('color', 'black') //Обратиться ко всем a.button внутри .content

//? Фильтры дочерних элементов =================//
//":first-child" элементы, расположенные первыми в своих родительских элементах
//":last-child" элементы, расположенные последними в своих родительских элементах
//":nth-child( )" ":nth-child-last( )" элементы, расположенные определенным образом в родительских элементах (четные, нечетные, идущие под заданным номером)
//":only-child" элементы, являющиеся единственными потомками в своих родительских элементах
//":only-of-type" элементы, являющиеся единственными, удовлетворяющими селектору, потомками в своих родительских элементах
//":first-of-type" те из выбранных элементов, которые первыми встречаются в своих родительских элементах
//":last-of-type" те из выбранных элементов, которые последними встречаются в своих родительских элементах
//":nth-first-of-type( )" ":nth-last-of-type( )" те из выбранных элементов, которые в определенную очередь встречаются в своих родительских элементах

//? Фильтры элементов форм =================//
//":button" элементы с тегом button или типом button
//":radio" элементы, являющиеся переключателями
//":checkbox" элементы, являющиеся флажками
//":text" элементы, являющиеся текстовыми полями
//":password" элементы, являющиеся полями ввода пароля
//":file" элементы, являющиеся полями загрузки файлов
//":submit" элементы, являющиеся кнопками отправки формы
//":reset" элементы, являющиеся кнопками очистки формы
//":image" элементы, являющиеся изображениями для отправки формы (input типа image)
//":input" элементы, являющиеся элементами формы (с тегами input, textarea или button)
//":selected" выбранные элементы (со статусом selected). Это могут быть элементы типа <option>.
//":focus" элементы формы, находящиеся в фокусе.
//":checked" выбранные элементы (со статусом checked). Это могут быть элементы типа <checkbox> или <radio>.
//":enabled" активные элементы формы (со статусом enabled)
//":disabled" неактивные элементы формы (со статусом disabled)

//! CSS text HTML ====================================================================================================//

// css =================//

// Получить класс в переменную
//var $content = $('.content')

// Найти элемент, истользуя переменную
//$content.find('a.button').css('color', 'red')

$('.content p').css({
	'color': 'red',
	'font-size': '24px',
	'margin-left': '50px'
})

$('.content p').css({
	color: 'red',
	fontSize: '24px',
	marginLeft: '50px'
})

// Выбрать элемент из масива =================//
let a = $('.list li').get(0)
console.log(a)

// text =================//
let newText = $('.content').text()

// Коллич эл в выборке
let sum = $('li').length

//? Получить и перезаписать HTML (с тегами)
let newHtml = $('.content').html('<p>new textsd</p>')

//? Вставить контент =================//
$('ul').before('<span>New Block</span>') // перед
$('ul').after('<span>New Block</span>') // после
$('ul').prepend('<span>New Block</span>') // внутрь вначало
$('ul').append('<span>New Block</span>') // внутрь вконец

//? Клонирование блоков =================//

var cloneEl = $('.anim').clone() // Получаем в константу
$('footer').before(cloneEl) // вставляем

//? Удаление блоков =================//

var cloneEl = $('.anim').remove() // Получаем в константу и удаляем
$('footer').before(cloneEl) // вставляем


//! Добавить/Убрать класс ====================================================================================================//

$('.content').addClass('_active') // Добавить класс
$('.content').removeClass('_passive') // Убрать класс
$('.content').toggle('_passive') // Переключить класс

//  ====================================================================================================//

$('a').click(function () { // Вешаем обработчик на ссылку
	alert('hello!!')
	$('.header').addClass('_active') // Вешаем класс на хедер
})

//! Стандартные анимации ====================================================================================================//
/*
.hide() .show() Скрывает/показывает элементы на странице (за счет плавного изменения его размера и прозрачности).
.slideUp() .slideDown() Разворачивает/сворачивает элементы на странице (за счет плавного изменения высоты элементов).
.slideToggle() Поочередно разворачивает/сворачивает элементы на странице, как это делают .slideUp() и .slideDown().
.fadeIn() .fadeOut() Скрывает/показывает элементы на странице за счет плавного изменения прозрачности.
.fadeTo() Плавно изменяет прозрачность элементов.
.fadeToggle() Поочередно скрывает/показывает элементы на странице, как это делают .fadeIn() и .fadeOut().
*/

// fadeTo =================//
$(function () {
	$('.anim').fadeTo(2000, 0.2).fadeTo(2000, 1)
})

$(function () {
	$('h2').click(function () { // Отслеживаем клик на h2
		$(this).next().slideToggle(); // Показываем/скрываем p, который идет после заголовка
	});
});

// Получить в переменную содержимое тега н1, если передать в text() новое значение, то оно перезапишет
var textH = $('.header h1').text()
alert(textH)

// Скрыть и показать блок с задержкой в 2с (в одну строку 2 функции)
var textH = $('.header h1').hide(2000).show(2000)

// выбрать все li и скрыть их (не нужны циклы!!)
$('li').hide(3000)

//? Отслеживаем клик =============================//
$(function () {
	$('.anim').click(function () { // Отслеживаем клик на квадрате
		$(this).animate({ 'height': '+=100px' }, 1000)  // Увеличиваем сначала высоту (1000 скорость анимации)
		$(this).animate({ 'width': '+=100px' }, 150) // Потом ширину при каждом клике
	});
});

$(function () {
	$('.content h1').click(function () { // Отслеживаем клик на h1
		$('.anim').animate({  // Возвращаем высоту и ширину к исходным размерам
			'height': '200px',
			'width': '200px'
		})
	})
})

//! Получить высоту и ширину блока ====================================================================================================//

// Получить высоту и ширину блока. Можно сразу задать width(300)
var widthBlock = $('.anim').width(300)
var heightBlock = $('.anim').height(400)

// Получить и вывести ширину и высоту блока
function widthAndHeight(element) {
	var className = '.' + element; // Добавим к классу точку
	var w = $(className).width(); // Получаем ширину елемента
	var h = $(className).height(); // Получаем высоту елемента
	$('h1').text('Ширина: ' + w + '; Высота: ' + h) // выводим
}
widthAndHeight('anim') // вызываем функцию и передаем класс

//! Attrubuts ==============================================================================================//

// Узнать атрибут
var atrElem = $('.button').attr('class')
alert(atrElem)

// Поменять атрибут
var atrElem = $('.button').attr('href', 'https://www.google.com/?hl=RU')

// Добавить атрибут с подсказкой
$('.anim').attr('title', 'Текст подсказки')

// Убрать атрибут
var atrElem = $('.button').removeAttr('href')

// Функция добавления атрибута
function addAttr(element, newAttr, newValue) {
	var className = '.' + element;
	$(className).attr(newAttr, newValue);
}
addAttr('anim', 'title', 'подсказка')

// Поиск и стилизация по значениям атрибутов
$('li').each(function () { // получаем коллекцию и делаем проверку по елементам
	if ($(this).attr('data') == 'red') { // Проверяем наличие атрибута data="red"
		$(this).css('color', 'red')  // Стилизуем
	}
})

//! События  ====================================================================================================//
/*
https://jquery.page2page.ru/index.php5/События

События мыши
.click() Устанавливает обработчик "клика" мышью по элементу, либо, запускает это событие.
.dblclick() Устанавливает обработчик двойного "клика" мышью по элементу, либо, запускает это событие.
.hover() Устанавливает обработчик двух событий: появления/исчезновения курсора над элементом.
.mousedown() Устанавливает обработчик нажатия кнопки мыши, либо, запускает это событие.
.mouseup() Устанавливает обработчик поднятия кнопки мыши, либо, запускает это событие.
.mousemove() Устанавливает обработчик движения курсора в области элемента, либо, запускает это событие.
.mouseout() Устанавливает обработчик выхода курсора из области элемента, либо, запускает это событие.
.mouseover() Устанавливает обработчик появления курсора в области элемента, либо, запускает это событие.
.toggle() Поочередно выполняет одну из двух или более заданных функций, в ответ на "клик" по элементу.

События клавиатуры
.keydown() Устанавливает обработчик перехода клавиши клавиатуры в нажатое состояние, либо, запускает это событие.
.keyup() Устанавливает обработчик возвращение клавиши клавиатуры в ненажатое состояние, либо, запускает это событие.
.keypress() Устанавливает обработчик ввода символа с клавиатуры, либо, запускает это событие.

События формы
.focus() Устанавливает обработчик получения фокуса, либо, запускает это событие.
.blur() Устанавливает обработчик потери фокуса, либо, запускает это событие.
.focusin() Устанавливает обработчик получения фокуса самим элементом или одним из его дочерних.
.focusout() Устанавливает обработчик потери фокуса самим элементом или одним из его дочерних.
.select() Устанавливает обработчик выделения текста, либо, запускает это событие.
.submit() Устанавливает обработчик отправки формы, либо, запускает это событие.
.change() Устанавливает обработчик изменения элемента формы, либо, запускает это событие.

События загрузки страницы
.ready() Устанавливает обработчик готовности дерева DOM.
.load() Устанавливает обработчик завершения загрузки элемента.
.unload() Устанавливает обработчик ухода со страницы (при переходе по ссылке, закрытии браузера и.т.д.).

События браузера
.error() Устанавливает обработчик ошибки при загрузке элементов (например отсутствие необходимой картинки на сервере).
.resize() Устанавливает обработчик изменения размеров окна браузера, либо, запускает это событие.
.scroll() Устанавливает обработчик "прокрутки" элементов документа, либо, запускает это событие.
*/

// Клик =================//
$('.anim').click(function () {
	console.log("Клик")
})

//? Событие hover =================//
// hover обрабатывает 2 события - наведение и уход курсора
let link = $('li a')
link.hover(
	function () {
		$(this).addClass('_outline')
	}, function () {
		$(this).removeClass('_outline')
	}
)

//? Отмена стандартных (по умолчанию) действий =================//
link.click(function (e) {
	e.preventDefault()
})

// 2 вариант отмены стандартных (по умолчанию) действий ====//
link.click(function () {
	// Код до return false выполнится
	return false
	// Код после return false не выполнится
})

//? Отправка форма по запросу =================//
let links = $('li a')
links.click(function (e) {
	let answer = confirm('Вы хотите отправить форму?')
	// Если была нажата клавиша отмена выполним отмену отправки
	if (!answer) {
		e.preventDefault()
	}
})